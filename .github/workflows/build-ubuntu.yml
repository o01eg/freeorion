name: "Ubuntu"

on:
  push:
    paths-ignore:
      - 'msvc*/**'
      - 'check/**'
      - 'doc/**'
      - 'packaging/**'
      - 'snap/**'
      - '*.md'
      - 'check/**'
      - 'default/**'
      - 'test-scripting/**'
  pull_request:
    paths-ignore:
      - 'msvc*/**'
      - 'check/**'
      - 'doc/**'
      - 'packaging/**'
      - 'snap/**'
      - '*.md'
      - 'check/**'
      - 'default/**'
      - 'test-scripting/**'

jobs:
  build-ubuntu:
    name: ${{ matrix.os }} Build FreeOrion compiler ${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        compiler: [gcc, clang]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: build-ubuntu-install-cache-id
        with:
          path: ${{ runner.temp }}/cache-build-linux-install
          key: build-${{ matrix.os }}-install-cache-key-v1.0
      - uses: airvzxf/cache-anything-new-action@v1.0
        with:
          script: '${{ matrix.os }}-install-build.sh'
          is_cached: ${{ steps.build-ubuntu-install-cache-id.outputs.cache-hit }}
          cache: ${{ runner.temp }}/cache-build-linux-install
          snapshot: '/'
          exclude: '/boot /data /dev /mnt /proc /run /sys'
      - name: Build directory
        run: mkdir build
      - name: Configure for gcc
        if: ${{ matrix.compiler == 'gcc' }}
        run: |
          cd build
          cmake -DBUILD_TESTING=ON -DBUILD_CLIENT_GG=Off -DBUILD_CLIENT_GODOT=Off -DCMAKE_CXX_FLAGS="-fsanitize=address -g"   -DCMAKE_C_FLAGS="-fsanitize=address -g"   -DCMAKE_EXE_LINKER_FLAGS="-fsanitize=address"   -DCMAKE_MODULE_LINKER_FLAGS="-fsanitize=address" -DBUILD_SERVER=On -DBUILD_AI=On -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
      - name: Configure for clang
        if: ${{ matrix.compiler == 'clang' }}
        env:
          CXXFLAGS: '-I/usr/include/SDL2 -I/usr/include/x86_64-linux-gnu/SDL2/ -I/usr/include/x86_64-linux-gnu/'
          CFLAGS: '-I/usr/include/SDL2 -I/usr/include/x86_64-linux-gnu/SDL2/ -I/usr/include/x86_64-linux-gnu/'
          CC: clang
          CXX: clang++
        run: |
          cd build
          cmake -DBUILD_TESTING=ON -DBUILD_CLIENT_GG=Off -DBUILD_CLIENT_GODOT=Off -DCMAKE_CXX_FLAGS="-fsanitize=address -g"   -DCMAKE_C_FLAGS="-fsanitize=address -g"   -DCMAKE_EXE_LINKER_FLAGS="-fsanitize=address"   -DCMAKE_MODULE_LINKER_FLAGS="-fsanitize=address" -DBUILD_SERVER=On -DBUILD_AI=On -DCMAKE_BUILD_TYPE=RelWithDebInfo ..
      - name: Build
        env:
          CMAKE_BUILD_PARALLEL_LEVEL: 2
        run: |
          cd build
          cmake --build .
      - name: Run C++ unit tests
        env:
          FO_TEST_HOSTLESS_GAMES: 1
        run: |
          cd build
          env ASAN_OPTIONS=detect_leaks=0 cmake --build . --config Release --target unittest
