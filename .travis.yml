---
stages:
  - lint
  - build
  - test

_lint_python_common: &_lint_python_common
  stage: lint
  os: linux
  dist: bionic
  language: python
  install:
    - pip install flake8==3.7.9
  before_script:
    - cd default/python
  script:
    - flake8
    - python -m compileall -q .

_build_cpp_common: &_build_cpp_common
  stage: build
  language: cpp
  cache: ccache
  install:
    - mkdir -p $HOME/.ccache;
    - echo sloppiness = file_macro > $HOME/.ccache/ccache.conf
    - echo max_size = 200M >> $HOME/.ccache/ccache.conf
    - ccache --version
    - ccache --show-stats
  before_script:
    - git remote add -t master -m master upstream https://github.com/freeorion/freeorion.git
    - git fetch upstream
    - git log -1 upstream/master
    - mkdir build
    - cd build
  after_success:
    - cmake-local --build . --config Release --target unittest
  before_cache:
    - ccache --clean
    - ccache --show-stats

_test_python_common: &_test_python_common
  stage: test
  os: linux
  dist: bionic
  language: python
  install:
    - pip install pytest==5.4.1
  script:
    - pytest

jobs:
  include:
    - name: Lint AI with Python 3.5
      <<: *_lint_python_common
      python: 3.5
      before_install:
        - alias pip=/usr/bin/pip3
        - alias python=/usr/bin/python3

    - name: Lint string tables
      stage: lint
      os: linux
      dist: bionic
      language: python
      python: 3.5
      script:
        - ./check/st-tool.py check --reference default/stringtables/en.txt default/stringtables/*.txt
        - diff -u default/stringtables/en.txt <(check/st-tool.py format default/stringtables/en.txt) || { echo "String table is not properly formatted"; exit 1; }

    - name: Build headless FreeOrion on Ubunutu 18.04 (Bionic)
      <<: *_build_cpp_common
      os: linux
      dist: bionic
      services:
        - docker
        - postgres
      addons:
        - postgres: "9.6"
      before_install:
        - psql -c 'SELECT version();' -U postgres
        - psql -c 'CREATE DATABASE freeorion;' -U postgres
        - psql -U postgres freeorion < ${TRAVIS_BUILD_DIR}/.ci/freeorion.sql
        - docker pull freeorion/freeorion-travis-build
        - docker run --name freeorion-psql freeorion/freeorion-travis-build /bin/bash -c "apt-get update --assume-yes && apt-get install --assume-yes python3-psycopg2 && mkdir -p /root/.config/freeorion/ && echo host=localhost user=postgres dbname=freeorion > /root/.config/freeorion/db.txt"
        - docker commit freeorion-psql freeorion-travis-build-psql
        # mount ccache dir and set its environment variable
        # timeout before Travis kills jobs so that ccache is always at least partially populated
        - >
          function cmake {
              docker run -v "${TRAVIS_BUILD_DIR}:/freeorion"  -v "${HOME}/.ccache:/ccache_dir" -e CCACHE_DIR='/ccache_dir' -w /freeorion/build freeorion-travis-build-psql timeout 40m /usr/bin/cmake $@
          }
        - >
          function cmake-local {
              docker run --network="host" -v "${TRAVIS_BUILD_DIR}:/freeorion"  -v "${HOME}/.ccache:/ccache_dir" -e CCACHE_DIR='/ccache_dir' -e CTEST_OUTPUT_ON_FAILURE=1 -w /freeorion/build freeorion-travis-build-psql timeout 40m /usr/bin/cmake $@
          }
      script:
        - git merge --no-commit upstream/master
        - cmake -DBUILD_TESTING=ON -DBUILD_HEADLESS=ON ..
        - cmake --build . -- -j 2

    - name: Unittest AI with Python 3.5
      <<: *_test_python_common
      python: 3.5
      before_install:
        - alias pip=/usr/bin/pip3

    - name: Unittest AI with Python 3.8
      <<: *_test_python_common
      python: 3.8
      before_install:
        - alias pip=/usr/bin/pip3
