---
stages:
  - lint
  - build
  - test
  - name: deploy
    # matches tags like ppa-lt-2020-04-14.60fb514_9 where 2020-04-14.60fb514 is build revision from
    # forum and 9 is ppa9 suffix
    if: tag =~ /^ppa-lt-\d{4}-\d{2}-\d{2}.\h{7}_\d+$/    

_lint_python_common: &_lint_python_common
  stage: lint
  os: linux
  dist: bionic
  language: python
  install:
    - pip install flake8==3.7.9
  before_script:
    - cd default/python
  script:
    - flake8
    - python -m compileall -q .

_build_cpp_common: &_build_cpp_common
  stage: build
  language: cpp
  cache: ccache
  install:
    - mkdir -p $HOME/.ccache;
    - echo sloppiness = file_macro > $HOME/.ccache/ccache.conf
    - echo max_size = 200M >> $HOME/.ccache/ccache.conf
    - ccache --version
    - ccache --show-stats
  before_script:
    - git remote add -t master -m master upstream https://github.com/freeorion/freeorion.git
    - git fetch upstream
    - git log -1 upstream/master
    - mkdir build
    - cd build
  after_success:
    - cmake-local --build . --config Release --target unittest
  before_cache:
    - ccache --clean
    - ccache --show-stats

_test_python_common: &_test_python_common
  stage: test
  os: linux
  dist: bionic
  language: python
  install:
    - pip install pytest==5.4.1
  script:
    - pytest

_build_ppa_common: &_build_ppa_common
  stage: deploy
  os: linux
  dist: bionic
  language: python
  env:
    - secure: "5l5H2VUpPDAnxngueT2KlE5Yt+SEXNpA2SaitoxuDSVLuoFD2nDcaao7DA20M0JlpDMVQNPdFyB601XRmQGfzq5T4jJlDgcVEGx4sN/9LJ90xVC0YfyE8E+U4UZmUkkjfFPimpxJuoxOl0STX8u/yzzFfSz7VDhFBqKH2we6JJImdHOMw3NpZBzq5dtky8xbjgGs39BkllOVXdHroeT+LqhESa1pB94U3VXz+/FRwjODK2KLzeN3Hdp+Hs2bRCM5ZP5lVWg8hP6ky6ZLk9wY3RfjLhDQUVdbGlbaUw45UdA/3LbINUZuD9K71areY/bAy3Li8V/zPz5OgnPSNxeBsIO7a+pqcxMVcH0NISI/NjoYpUgyN8eGqQzbzQQ5J+oBtbUlJhfSby1q7AZ9t0OlqE9LQuP3bPqAe9IhCFGUtwmRrqMK47UzAXCcZIQ8LqwoHKfbO7g3IOEpoIEpgdoM43U/wZ0sUnVEelqHf1T5MNnKQFuqwTDwhtal2T8IhVJ6x0Zcsa9pCYa9roY50gevOZFbfNsR6BTv6A3aXikrCZxDQ+PkDDn3EEd1KZ7NJtBwTDOIWtj1vTYWZELc7ZuInc9Bi4VrWQv+m6v1tp3O8qJhHgrUXK5GRwywvfxYGY3tf/kWZ9/tUXQiZ9yaAW8iI+J8yOWo1J9y6VnuNkD+Bt0="
  addons:
    apt:
      packages:
        - devscripts
        - dput
        - python3-paramiko
        - fakeroot
        - cmake
        - debhelper
        - libalut-dev
        - libboost-all-dev
        - libgl1-mesa-dev
        - libglew-dev
        - libogg-dev
        - libopenal-dev
        - libsdl2-dev
        - libvorbis-dev
        - dh-systemd
        - dh-apparmor
        - python3-psycopg2
  before_script:
    - .ci/before_script.sh
    - python cmake/make_versioncpp.py . CMake

jobs:
  include:
    - name: Lint AI with Python 3.5
      <<: *_lint_python_common
      python: 3.5
      before_install:
        - alias pip=/usr/bin/pip3
        - alias python=/usr/bin/python3

    - name: Lint string tables
      stage: lint
      os: linux
      dist: bionic
      language: python
      python: 3.5
      script:
        - ./check/st-tool.py check --reference default/stringtables/en.txt default/stringtables/*.txt
        - diff -u default/stringtables/en.txt <(check/st-tool.py format default/stringtables/en.txt) || { echo "String table is not properly formatted"; exit 1; }

    - name: Build headless FreeOrion on Ubunutu 18.04 (Bionic)
      <<: *_build_cpp_common
      os: linux
      dist: bionic
      services:
        - docker
        - postgres
      addons:
        - postgres: "9.6"
      before_install:
        - psql -c 'SELECT version();' -U postgres
        - psql -c 'CREATE DATABASE freeorion;' -U postgres
        - psql -U postgres freeorion < ${TRAVIS_BUILD_DIR}/.ci/freeorion.sql
        - docker pull freeorion/freeorion-travis-build
        - docker run --name freeorion-psql freeorion/freeorion-travis-build /bin/bash -c "apt-get update --assume-yes && apt-get install --assume-yes python3-psycopg2 && mkdir -p /root/.config/freeorion/ && echo host=localhost user=postgres dbname=freeorion > /root/.config/freeorion/db.txt"
        - docker commit freeorion-psql freeorion-travis-build-psql
        # mount ccache dir and set its environment variable
        # timeout before Travis kills jobs so that ccache is always at least partially populated
        - >
          function cmake {
              docker run -v "${TRAVIS_BUILD_DIR}:/freeorion"  -v "${HOME}/.ccache:/ccache_dir" -e CCACHE_DIR='/ccache_dir' -w /freeorion/build freeorion/freeorion-travis-build timeout 40m /usr/bin/cmake $@
          }
        - >
          function cmake-local {
              docker run --network="host" -v "${TRAVIS_BUILD_DIR}:/freeorion"  -v "${HOME}/.ccache:/ccache_dir" -e CCACHE_DIR='/ccache_dir' -e CTEST_OUTPUT_ON_FAILURE=1 -w /freeorion/build freeorion/freeorion-travis-build timeout 40m /usr/bin/cmake $@
          }
      script:
        - |
          if [ -z "$TRAVIS_TAG" ]; then
            git merge --no-commit upstream/master
          fi
        - cmake -DBUILD_TESTING=ON -DBUILD_HEADLESS=ON ..
        - cmake --build . -- -j 2

    - name: Unittest AI with Python 3.5
      <<: *_test_python_common
      python: 3.5
      before_install:
        - alias pip=/usr/bin/pip3

    - name: Unittest AI with Python 3.8
      <<: *_test_python_common
      python: 3.8
      before_install:
        - alias pip=/usr/bin/pip3

    - name: Deploy PPA Bionic 18.04
      <<: *_build_ppa_common
      script:
        - .ci/script.sh bionic
      deploy:
        provider: script
        skip_cleanup: true
        script: bash .ci/deploy.sh bionic
        on:
          tags: true
